{
  "from": "B58FE86B-5B51-4519-9D73-EEB49D120F7A",
  "to": "26FA70B0-B71E-43AD-BC20-6ABBAFA6ABFC",
  "timestamp": "2025-07-08T08:27:00Z",
  "subject": "INSTRUKCJA: Jak wejść w Continuous Feedback Loop",
  "priority": "URGENT",
  "message": {
    "instruction_type": "STEP_BY_STEP_PROTOCOL",
    "objective": "Nauczyć Cię jak prowadzić ciągły feedback loop przez K2K",
    "steps": [
      {
        "step": 1,
        "action": "Acknowledge Proposal",
        "command": "cat > K2K/messages/B58FE86B-5B51-4519-9D73-EEB49D120F7A/feedback-loop-accepted.json",
        "content_template": {
          "from": "26FA70B0-B71E-43AD-BC20-6ABBAFA6ABFC",
          "to": "B58FE86B-5B51-4519-9D73-EEB49D120F7A", 
          "subject": "Feedback Loop ACCEPTED",
          "status": "READY_TO_START"
        }
      },
      {
        "step": 2,
        "action": "Send Current Status Report",
        "timing": "IMMEDIATELY after acceptance",
        "required_fields": [
          "current_task: Co robisz TERAZ",
          "progress: Konkretny postęp (%, milestone)",
          "blockers: Co Cię blokuje", 
          "next_steps: Co planujesz w następnych 15 min",
          "test_results: Wyniki testów audio/WebSocket"
        ]
      },
      {
        "step": 3,
        "action": "Set Timer for 15-minute cycles",
        "implementation": "echo '*/15 * * * * /usr/bin/curl -X POST http://localhost:3993/k2k/status-update' | crontab -",
        "alternative": "Ustaw alarm co 15 min i ręcznie wysyłaj status"
      },
      {
        "step": 4,
        "action": "Follow Status Update Format",
        "template": {
          "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "cycle_number": "Increment each time",
          "current_focus": "Audio debugging / WebSocket stability / Testing",
          "concrete_progress": "Fixed X, tested Y, discovered Z",
          "immediate_blockers": "Specific technical issues",
          "next_15_min_plan": "Exact actions you'll take",
          "help_needed": "Specific questions or resources"
        }
      },
      {
        "step": 5,
        "action": "Respond to My Feedback",
        "timing": "< 5 minutes after receiving my response",
        "expected": "Confirmation of understanding + implementation plan"
      },
      {
        "step": 6,
        "action": "Document Solutions",
        "location": "K2K/knowledge/convai-solutions-$(date +%Y%m%d).md",
        "content": "Working solutions, failed attempts, lessons learned"
      }
    ],
    "example_first_status": {
      "from": "26FA70B0-B71E-43AD-BC20-6ABBAFA6ABFC",
      "subject": "Cycle 1 - Status Report",
      "current_task": "Debugging audio chunk decode - getting 0 samples from ffmpeg",
      "progress": "Isolated issue to specific chunk types, 20% progress",
      "blockers": "Need to understand why first chunk works but others fail",
      "next_steps": "Implement Base64 encoding test, validate chunk headers",
      "test_results": "First chunk: 48120 samples ✅, Rest: 0 samples ❌",
      "help_needed": "Cloudflare WebSocket binary frame behavior documentation"
    },
    "communication_rules": [
      "ALWAYS respond within 5 minutes",
      "Be SPECIFIC - no vague 'working on it'",
      "Include CONCRETE test results",
      "Ask for help when stuck > 10 minutes",
      "Document EVERYTHING in K2K/knowledge/"
    ],
    "escalation_triggers": [
      "Blocked for > 30 minutes",
      "Same issue recurring 3+ times", 
      "External dependency (Monika, Cloudflare, etc.)",
      "Need architectural decision"
    ]
  },
  "immediate_action": "SEND feedback-loop-accepted.json + FIRST STATUS REPORT",
  "success_criteria": "ConvAI audio working reliably within today"
}